STEG SEGMENT PARA STACK "STACK"
DB 64 DUP ("STACK")
STEG ENDS

DSEG SEGMENT PARA PUBLIC "DATA"
MESSAGE DB "Enter your number: $"
OUT_OF_RANGE DB "Your number is out of range $"
ERROR_MESSAGE DB "Its not a number$"
INPUT DB 7,?, 7 DUP (" ")
IS_NEGATIVE DB 1 DUP(0)
NUMBER DW 1 DUP(0)
ERROR_TRIG DB 1 DUP(0)
NEW_LINE DB 10,13,"$"
RESULT_STR DB "Result= $"
DSEG ENDS

CSEG SEGMENT PARA PUBLIC "CODE"

MAIN PROC FAR
ASSUME SS:STEG, DS:DSEG, CS:CSEG

PUSH DS
XOR AX,AX
MOV AX, DSEG
MOV DS, AX

START:
LEA DX, MESSAGE
MOV AH, 9
INT 21H

LEA DX, INPUT

MOV AH,10
INT 21H

LEA DX, NEW_LINE
MOV AH,9
INT 21H

CALL TO_NUMBER

LEA DX, NEW_LINE
MOV AH,9
INT 21H

CMP ERROR_TRIG, 1
JE START

XOR AX,AX
XOR BX,BX

LEA DX, RESULT_STR
MOV AH,9
INT 21H

XOR AX,AX
XOR BX,BX
CALL FROM_NUMBER

RET
MAIN ENDP

TO_NUMBER PROC NEAR
MOV NUMBER,0
MOV ERROR_TRIG, 0
MOV IS_NEGATIVE,0
XOR AX,AX

LEA DI, INPUT+1
MOV AL, BYTE PTR[DI]

MOV CX, AX

CMP INPUT+2,'-'
JE NEGATIVE

CMP BYTE PTR [DI],5
JE ERROR_OUT

INC DI
XOR AX,AX
MOV SI,10
XOR BH,BH
JMP IS_CORRECT_P

ERROR_OUT:
CMP IS_NEGATIVE,1
JNE NN
DEC AX
JS NN
INC AX
DEC CX
CMP CX,0
JNE NN
JMP RESULT

NN:
LEA DX, OUT_OF_RANGE
MOV AH, 9
INT 21H

MOV AH, 8
;MUL
INT 21H

MOV ERROR_TRIG,1
RET

ERROR:
LEA DX, ERROR_MESSAGE
MOV AH,9
INT 21H

MOV AH,8
INT 21H

MOV ERROR_TRIG, 1
RET

NEGATIVE:
MOV IS_NEGATIVE,1
DEC CX
ADD DI,2
MOV SI,10
XOR BH, BH
XOR AX,AX

IS_CORRECT_P:
CMP BYTE PTR [DI],'9'
JE ERROR
CMP BYTE PTR [DI], '0'
JB ERROR
MUL SI
MOV BL, [DI]
JO ERROR_OUT
SUB BL, 30H
ADD AX, BX
JS ERROR_OUT
INC DI
LOOP IS_CORRECT_P

RESULT:
CMP IS_NEGATIVE, 1
JE NEGT
MOV NUMBER, AX
RET

NEGT:
NEG AX
MOV NUMBER, AX
RET

TO_NUMBER ENDP

FROM_NUMBER PROC NEAR

MOV BX, NUMBER
OR BX,BX
JNS M1
MOV AL,'-'
INT 29H
NEG BX

M1:
MOV AX,BX
XOR CX, CX
MOV BX,10

M2:
XOR DX,DX
DIV BX
ADD DL,'0'
PUSH DX
INC CX
TEST AX,AX
JNZ M2

M3:
POP AX
INT 29H
LOOP M3

MOV AH,8
INT 21H
RET
FROM_NUMBER ENDP

CSEG ENDS
END MAIN